#coding=utf-8
import numpy as np
import tensorflow as tf
a = tf.Variable(0.1, tf.float32)
b = tf.Variable(100.0, tf.float32)
x = tf.placeholder(tf.float32)
linear_model = a * x + b
y = tf.placeholder(tf.float32)
loss = tf.reduce_sum(tf.square(linear_model - y))
optimizer = tf.train.AdamOptimizer(0.03)
train = optimizer.minimize(loss)
x_train = [43, 46, 47, 59, 61, 62, 70, 78, 86]
y_train = [448, 500, 520, 620, 648, 680, 720, 800, 900]
init = tf.global_variables_initializer()
sess = tf.Session()
sess.run(init)
for i in range(15000):
  sess.run(train, {x:x_train, y:y_train})
  curr_a, curr_b, curr_loss  = sess.run([a, b, loss], {x:x_train, y:y_train})
  print("i: %s a: %s b: %s loss: %s"%(i, curr_a, curr_b, curr_loss))